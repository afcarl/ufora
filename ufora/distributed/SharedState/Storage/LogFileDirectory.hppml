/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#include "../Types.hppml"

namespace SharedState {

class LogFileDirectory {
public:
        // default copy and assign should be fine here
        // since it only holds strings
        LogFileDirectory(
                const std::string& baseDir,
                const Keyspace& keyspace,
                const KeyRange& keyrange
                );

	map<uint32_t, string> getAllLogFiles();
        size_t logFileCount() const;

	map<uint32_t, string> getAllStateFiles();

        void startNextLogFile(void);

        std::string getCurrentLogPath();

        std::string getNextStatePath();

private:
        uint32_t getCurrentLogFileIteration();

        uint32_t getInitialLogIteration();

        std::string fullPath(std::string prefix, uint32_t iter);

        map<uint32_t, string> getFilesWithPrefix(string prefix);

        pair<string, uint32_t> splitFileName(string fileName);

        vector<string> getLocalFiles(void);


        size_t mLastLogFileCount;
        std::string mWorkingDir;
        std::string mCurrentLogFilePath;
};

}

