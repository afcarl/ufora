/***************************************************************************
    Copyright 2016 Ufora Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
****************************************************************************/

#pragma once

#include "../core/PolymorphicSharedPtr.hpp"
#include "../core/containers/ImmutableTreeSet.hppml"
#include "../core/containers/ImmutableTreeMap.hppml"
#include "../FORA/VectorDataManager/PageId.hppml"
#include "../FORA/python/PurePython/PythonParseResult.hppml"
#include "../FORA/Core/ImplValContainer.hppml"

class OutOfProcessPythonTaskPolicy;

#include <boost/thread.hpp>
#include "../core/threading/Trigger.hppml"

class VectorDataManager;

namespace Fora {
namespace Interpreter {

class ExecutionContext;

}
}

namespace Cumulus {

/*******************

Central infrastructure for communicating with a pyfora worker pool.

The WorkerPool semantics are defined in the pyfora module (python/pyfora/worker/WorkerPool.py).

All communication happens on a named socket whose path is given in 'pathToSocket'.

*******************/

@type OutOfProcessPythonTaskResult = 
    -| ValidResult of ()
    -| TerminatedEarly of ()
    -| Blocked of ImmutableTreeSet<Fora::PageId> pages, int64_t bytesOfExternalMemoryRequired
    ;

class OutOfProcessPythonTasks : 
            public PolymorphicSharedPtrBase<OutOfProcessPythonTasks> {
public:
    OutOfProcessPythonTasks(
                ImmutableTreeMap<string, string> pythonNameToPyforaName,
                ImplValContainer pyforaBuiltins,
                ImplValContainer foraBuiltins,
                boost::function<Fora::PythonParseResult (std::string)> pyAstParser,
                std::string pathToSocket
                ) : 
            mPythonNameToPyforaName(pythonNameToPyforaName),
            mPyforaBuiltins(pyforaBuiltins),
            mForaBuiltins(foraBuiltins),
            mPyAstParser(pyAstParser),
            mPathToSocket(pathToSocket)
        {
        }

    OutOfProcessPythonTaskResult execute(
                    const ImplValContainer& toCall, 
                    PolymorphicSharedPtr<Fora::Interpreter::ExecutionContext> containingContext,
                    Ufora::threading::Trigger& earlyTerminationTrigger,
                    const OutOfProcessPythonTaskPolicy& taskPolicy
                    );

private:
    mutable boost::mutex mMutex;

    ImmutableTreeMap<string, string> mPythonNameToPyforaName;
    
    ImplValContainer mPyforaBuiltins;

    ImplValContainer mForaBuiltins;

    boost::function<Fora::PythonParseResult (std::string)> mPyAstParser;

    std::string mPathToSocket;
};

}