/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include "CumulusComponentMessageCreated.hppml"
#include "CumulusClientOrMachine.hppml"
#include "../FORA/VectorDataManager/VectorDataManager.hppml"
#include "PersistentCache/PersistentCacheIndex.hppml"

namespace Cumulus {

/****************************

CorruptedPersistentCacheRecoveryCoordinator

A class used by Cumulus to coordinate pruning the persistent cache if it's corrupted.

This class is implemented sychronously and executes before the Add/Drop recovery or any
other recovery on the leader machine.

*****************************/

class CorruptedPersistentCacheRecoveryCoordinatorImpl;

class CorruptedPersistentCacheRecoveryCoordinator {
public:
	CorruptedPersistentCacheRecoveryCoordinator(
				PolymorphicSharedPtr<VectorDataManager> inVDM,
				boost::function1<void, CumulusComponentMessageCreated> inOnCumulusComponentMessageCreated,
				boost::function0<void> inRecoveryComplete,
				MachineId ownMachineId,
				bool isTheLeader,
				hash_type inRegime
				);

	void handleCumulusComponentMessage(
						CumulusComponentMessage message,
						CumulusClientOrMachine source,
						CumulusComponentType component
						);


private:
	boost::shared_ptr<CorruptedPersistentCacheRecoveryCoordinatorImpl> mImpl;
};


}
