/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include "RequestComputationResultFromMachine.hppml"
#include "DataTransfers.hppml"
#include "../FORA/VectorDataManager/PageRefcountEvent.hppml"
#include "../networking/OrderedMessage.hppml"
#include "CumulusComponentMessage.hppml"
#include "CumulusComponentType.hppml"

namespace Cumulus {

@type CumulusClientToWorkerMessage =
	-|	PageEvent of Fora::PageRefcountEvent msg, hash_type regime
	-|	RequestComputation of RequestComputationResultFromMachine msg, hash_type regime
	-| 	TokenReceived of DataTransferTokenId token, hash_type regime
	-| 	CrossComponent of
			CumulusComponentMessage message,
			ImmutableTreeSet<CumulusComponentType> targetComponents,
			CumulusComponentType sourceComponent,
			hash_type regime
with
	uint32_t priority = (this->computePriority())
{
public:
	hash_type regime() const;

private:
	uint32_t computePriority() const
		{
		// All message types are control message and therefore high priority
		return 0;
		}

}
;

macro_defineCppmlComparisonOperators(CumulusClientToWorkerMessage);
macro_defineCppmlComparisonOperators(OrderedMessage<CumulusClientToWorkerMessage>);


}

