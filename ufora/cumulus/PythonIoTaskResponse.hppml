/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include "../FORA/Vector/VectorDataID.hppml"
#include "../FORA/Serialization/SerializedObject.hpp"
#include "../FORA/Core/ComputationResult.hppml"

namespace Cumulus {

class PythonIoTaskRequest;

@type PythonIoTaskResponse =
	-|	Success of hash_type guid
	-|	DatasetAsForaValue of hash_type guid, Fora::Interpreter::ComputationResult result
	-|	DataSuccessfullyPersisted of hash_type guid, uint64_t bytecount
	-|	ObjectExtracted of
			hash_type guid,
			PolymorphicSharedPtr<NoncontiguousByteBlock> result
	-|	ObjectPaths of hash_type guid, ImmutableTreeVector<std::string> paths
	-|	ObjectDoesNotExist of hash_type guid
	-|	Failure of hash_type guid, std::string failureReason
	-|	UserCausedFailure of hash_type guid, std::string failureReason
	-|  S3BucketSizeAndEtag of
			hash_type guid,
			std::string etag,
			uint64_t bucketSize
	-|  S3KeyDoesNotExist of hash_type guid
	-|  S3PermissionError of hash_type guid
	-|	MultipartS3UploadInitiated of hash_type guid, std::string uploadId
	-|	MultipartS3UploadPartCompleted of hash_type guid, std::string etag
	-|	OutOfProcessPythonCallResponse of hash_type guid, hash_type pythonTaskId
{
public:
	//note that we can't use a 'with' statement here for 'guid' because the python wrappers
	//don't support it yet
	hash_type guid() const;
};

inline hash_type PythonIoTaskResponse::guid() const
	{
	@match PythonIoTaskResponse(*this)
		-| Success(guid) ->> { return guid; }
		-| DataSuccessfullyPersisted(guid) ->> { return guid; }
		-| Failure(guid) ->> { return guid; }
		-| UserCausedFailure(guid) ->> { return guid; }
		-| ObjectPaths(guid) ->> { return guid; }
		-| ObjectExtracted(guid) ->> { return guid; }
		-| ObjectDoesNotExist(guid) ->> { return guid; }
		-| DatasetAsForaValue(guid) ->> { return guid; }
		-| S3BucketSizeAndEtag(guid) ->> { return guid; }
		-| S3KeyDoesNotExist(guid) ->> { return guid; }
		-| S3PermissionError(guid) ->> { return guid; }
		-| MultipartS3UploadInitiated(guid) ->> { return guid; }
		-| MultipartS3UploadPartCompleted(guid) ->> { return guid; }
		-| OutOfProcessPythonCallResponse(guid) ->> { return guid; }
		-| _ ->> {
			lassert_dump(false, "Didn't provide a GUID member for " << prettyPrintString(*this));
			}
		;
	}

macro_defineCppmlComparisonOperators(PythonIoTaskResponse);

}

