/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
`hidden;

MultiplyWithCarry:
#Markdown(
"""### `MultiplyWithCarry`

#### Description

A class wrapping the multiply-with-carry random number generation algorithm
due to G. Marsaglia. (see <http://en.wikipedia.org/wiki/Multiply-with-carry>)

#### Aliases

    math.random.MultiplyWithCarry

""")
class 
	{
#Markdown(
"""#### Description

The integral seed for the generator.
""")
	member seed_;

#Markdown(
"""#### Usage

    math.random.MultiplyWithCarry(seed)

#### Description

Creates a random number generator object using the multiply-with-carry method
due to G. Marsaglia, seeded with seed `seed`.
""")
	operator new(seed)
		{
		if (seed < 1) 
  		   throw "can't use a seed less than 1";
		createInstance(cls, seed_: seed);
		};

#Markdown(
"""#### Usage

    iterator(multiplyWithCarryInstance)

#### Description

Produces an `iterator` from an instance of `math.random.MultiplyWithCarry`, `multiplyWithCarryInstance`, which can be used to generate random integers.
""")
	operator iterator()
		{
		let mZ = UInt32(seed_);
  		let mW = 129u32;
  		while (true) 
		    {
    		mZ = 36969u32 * (mZ & 65535u32) + (mZ >> 16u32);
    		mW = 18000u32 * (mW & 65535u32) + (mW >> 16u32);
    		yield ((mZ << UInt32(16)) + mW);
    		}		
		};

#Markdown(
"""#### Description

The largest possible value returnable by the multiply-with-carry algorithm.
""")
	static max: 4294967296;

	};

