/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
"""
DESCRIPTION:
    DPOTRF computes the Cholesky factorization of a real symmetric
    positive definite matrix A.
    
    The factorization has the form
       A = U**T * U,  if UPLO = 'U', or
       A = L  * L**T,  if UPLO = 'L',
    where U is an upper triangular matrix and L is lower triangular.
    
    This is the block version of the algorithm, calling Level 3 BLAS.

ARGUMENTS:
    UPLO    String, or UInt8
            = 'U':  Upper triangle of A is stored;
            = 'L':  Lower triangle of A is stored.
    
    N       Integer type
            The order of the matrix A.  N >= 0.
    
    A       Vector of float, size N * N.
            The symmetric matrix A, stored in column-major format.
            If UPLO = 'U', the leading N-by-N upper triangular part of A contains the upper
            triangular part of the matrix A, and the strictly lower
            triangular part of A is not referenced.  If UPLO = 'L', the
            leading N-by-N lower triangular part of A contains the lower
            triangular part of the matrix A, and the strictly upper
            triangular part of A is not referenced.

RETURNS:
            Vector of float, size N.
            If UPLO == 'U', then the leading N-by-N upper triangle is the upper triangle
            of U, in the factorization A = U**T * U (the lower-left triangle is a copy of the
            lower-left triange of A). If UPLO == 'L', then the leading N-by-N lower
            triangle is the is the lower triange of the L, in the factorization A = L * L**T
"""
fun(    
        uplo,
        n,
        A
        )
    {
	let elementType = nothing;
	(elementType, A) = blasWrappers.eltTypeAndFloatifyIfNecessary(A);

	let vecType = `JovOfVectorHolding(elementType);
	let intVecType = `JovOfVectorHolding(Int32);

    uplo = match (uplo) with
        ('U')   { 'U'[0] }
        ('L')   { 'L'[0] }
        ;
    n = Int32(n);
    
    if (size(A) < n * n)
        throw "input matrix A too small"
        
    let info = [0s32];
    
    let fortranName = addTypeSuffix(elementType, "potrf_");

    let wrapper =
        `FORTRANFunctionWrapper(
            fortranName,
            fortranName,
            (2,4),
            UInt8,              //0 UPLO    (input) CHARACTER*1
            Int32,              //1 N       (input) INTEGER
            vecType,           //2 A       (input/output) DOUBLE PRECISION array, dimension (LDA,N)
            Int32,              //3 LDA     (input) INTEGER
            intVecType    	//4 INFO    (output) INTEGER
        );
        
    (A, info) = wrapper(uplo, n, A, n, info);
    
    if (info[0] < 0s32)
        throw "argument " + String(-info[0]) + " to FORTRAN function xPOTRF had an illegal value";
    if (info[0] > 0s32)
        throw "the leading minor of order " + String(info[0]) + " is not "
                + "positive definite, and the factorization could not be completed.";
        
    return A;
    }
    ;
    
/*
SUBROUTINE DPOTRF( UPLO, N, A, LDA, INFO )
*
*  -- LAPACK routine (version 3.3.1) --
*  -- LAPACK is a software package provided by Univ. of Tennessee,    --
*  -- Univ. of California Berkeley, Univ. of Colorado Denver and NAG Ltd..--
*  -- April 2011                                                      --
*
*     .. Scalar Arguments ..
      CHARACTER          UPLO
      INTEGER            INFO, LDA, N
*     ..
*     .. Array Arguments ..
      DOUBLE PRECISION   A( LDA, * )
*     ..
*
*  Purpose
*  =======
*
*  DPOTRF computes the Cholesky factorization of a real symmetric
*  positive definite matrix A.
*
*  The factorization has the form
*     A = U**T * U,  if UPLO = 'U', or
*     A = L  * L**T,  if UPLO = 'L',
*  where U is an upper triangular matrix and L is lower triangular.
*
*  This is the block version of the algorithm, calling Level 3 BLAS.
*
*  Arguments
*  =========
*
*  UPLO    (input) CHARACTER*1
*          = 'U':  Upper triangle of A is stored;
*          = 'L':  Lower triangle of A is stored.
*
*  N       (input) INTEGER
*          The order of the matrix A.  N >= 0.
*
*  A       (input/output) DOUBLE PRECISION array, dimension (LDA,N)
*          On entry, the symmetric matrix A.  If UPLO = 'U', the leading
*          N-by-N upper triangular part of A contains the upper
*          triangular part of the matrix A, and the strictly lower
*          triangular part of A is not referenced.  If UPLO = 'L', the
*          leading N-by-N lower triangular part of A contains the lower
*          triangular part of the matrix A, and the strictly upper
*          triangular part of A is not referenced.
*
*          On exit, if INFO = 0, the factor U or L from the Cholesky
*          factorization A = U**T*U or A = L*L**T.
*
*  LDA     (input) INTEGER
*          The leading dimension of the array A.  LDA >= max(1,N).
*
*  INFO    (output) INTEGER
*          = 0:  successful exit
*          < 0:  if INFO = -i, the i-th argument had an illegal value
*          > 0:  if INFO = i, the leading minor of order i is not
*                positive definite, and the factorization could not be
*                completed.
*
*  =====================================================================
*/
