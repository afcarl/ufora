/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
/*
An example inspired by Ben Reddy's regression code which tests some behavior in the compiler.
*/

`hidden
f_0: 
    fun(B) {
        return [i for i in B]
        }
    
    ;

`hidden
f_1: 
    fun(A, {Vector(...)} indexVec)
        {
        if ( !A.implIsColumnMajor_ )
            {
            return f_2(A.transpose(), indexVec, false)
            }
        else
            {
            return A
            }
        };    

`hidden
f_2:
    fun(A, indexVec, aBool)
        {
        if( !A.implIsColumnMajor_ )
            {
            return f_1(A.transpose(), indexVec)
            }
        else {
            return A
            }
        };
			
        
`hidden
entryFun:
    fun(B, A, rowIndex, colIndex)
        {
        let AUse = nothing;
        let BUse = nothing;
        if (rowIndex is nothing) {
            AUse = A;
            BUse = B;
            }
        else {
            AUse = f_1(A, rowIndex);
            BUse = f_0(B);
            }

        return true;
        };
    
`test loopy: 
    entryFun(
        Vector.range(10.0), math.Matrix(Vector.range(100.0), (10,10)), Vector.range(10), nothing
        );
