/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
/********
tests of basic types, and Type conversions
********/

`test  arithToString_1 : Int64("100") is 100;

`test  arithToString_2 : Float64("100") is 100.0;

`test  typeofSymbol: `TypeJOV(`aSymbol) is Symbol;

`test  typeofString: `TypeJOV("a string") is String;

`test  typeofInlineUint8: `TypeJOV(10u8) is UInt8;
`test  typeofInlineUint16: `TypeJOV(10u16) is UInt16;
`test  typeofInlineUint32: `TypeJOV(10u32) is UInt32;
`test  typeofInlineUint64: `TypeJOV(10u64) is UInt64;

`test  typeofNegInlineUint8: `TypeJOV(-10u8) is Int8;
`test  typeofNegInlineUint8_2: -10u8 is -10s8;

`test  typeofNegInlineUint16: `TypeJOV(-10u16) is Int16;
`test  typeofNegInlineUint32: `TypeJOV(-10u32) is Int32;
`test  typeofNegInlineUint64: `TypeJOV(-10u64) is Int64;

`test  typeofInlineInt8: `TypeJOV(10s8) is Int8;
`test  typeofInlineInt16: `TypeJOV(10s16) is Int16;
`test  typeofInlineInt32: `TypeJOV(10s32) is Int32;
`test  typeofInlineInt64: `TypeJOV(10s64) is Int64;
`test  typeofInlineInteger_1: `TypeJOV(10) is Int64;
`test  typeofInlineInteger_2: `TypeJOV(10s) is Int64;
`test  typeofInlineInteger_3: `TypeJOV(10u) is UInt64;

`test  typeofInlineFloat32: `TypeJOV(10f32) is Float32;
`test  typeofInlineFloat64: `TypeJOV(10f64) is Float64;
`test  typeofInlineFloat_1: `TypeJOV(10.0) is Float64;
`test  typeofInlineFloat_2: `TypeJOV(10f) is Float64;
`test  typeofFloatnotation: 1.0e5 is 100000.0;
`test  typeofFloatnotation_2: 1.0e-5 is .00001;


`test  intToFloat_1 :   `TypeJOV(3.0)(2) is 2.0;

`test  floatToInt_1 :   `TypeJOV(0)(1.5) is 1;

`test  int64CallIsZero_1 :    Int64()  is 0;

`test  float64CallIsZero_1 :    Float64() is 0.0 ;

`test  stringCall_1 :    String() is '' ;

`test  Int64_1 :    Integer(64,true) is Int64 ;

`test  UInt64_1 :    Integer(64,false) is UInt64 ;

`test  Float64_1 :    Float(64) is Float64 ;

`test  typeOfBuiltinFloats_1 :   `TypeJOV(3.0) is Float64 ;

`test  typeOfBuiltinIntegers_1 :   `TypeJOV(3) is Int64 ;

`test  nothingIsNothing :  nothing is nothing ;

`test  nothingCall :    nothing(20) is nothing  ;


