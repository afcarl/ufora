/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include <string>
#include "../../core/math/Hash.hpp"
#include "../../core/cppml/CPPMLEquality.hppml"
#include "../../core/containers/ImmutableTreeVector.hppml"

@type
	HttpRequest = std::string url, std::string uniqueness
and
	OdbcRequest =
        std::string connectionString,
        ImmutableTreeVector<std::string> query,
        std::string uniqueness
and
	S3Dataset =
		//data present anywhere on S3. User must provide access credentials, which will be
		//used to pull the data from S3. If the credentials are blank, the dataset must be
		//publically available
		-|	External of
				std::string bucket,
				std::string key,
				std::string awsAccessKey,
				std::string awsSecretKey,
				std::string etag

		//data present in the private ufora account. UFORA credentials will be used.
		-|	Internal of
				std::string keyname
and
	FileDataset = std::string path, std::string uniqueness
and
	ExternalDatasetDescriptor =
		-|	S3DatasetSlice of
				S3Dataset dataset,
				uint64_t lowOffset,
				uint64_t highOffset
		-| 	EntireS3Dataset of
				S3Dataset dataset
		-|	HttpRequestDataset of HttpRequest dataset
		-|	OdbcRequestDataset of OdbcRequest dataset
		-|	FileSliceDataset of
				FileDataset file,
				uint64_t lowOffset,
				uint64_t highOffset
		-|	EntireFileDataset of
				FileDataset file
		-|	TestDataset of ()
		-|	ExceptionThrowingDataset of ()
		-|	FailureInducingDataset of ()
with
	hash_type hash = (hashCPPMLDirect(*this))
{
public:
	//returns the bytecount for the _page_ that will be loaded by this dataset object
	uint32_t bytecount() const;
};

macro_defineMemberHashFunction(ExternalDatasetDescriptor);
macro_defineCppmlComparisonOperators(ExternalDatasetDescriptor);

