/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include "Function.hppml"

class SimpleParseNode;
class Symbol;

namespace Ufora {
namespace FORA {
namespace Language {

@type OpOrExpression =
	-| Op of Symbol op
	-| Expr of Expression expr
with
	SimpleParseRange range
	;



@type ParserOperators = CodeDefinitionPoint codeDefPoint {
public:
	Expression collapseOpExpressionSeq(
		const ImmutableTreeVector<OpOrExpression>& exprs,
		uint32_t depth = 0
		);

	static bool isOperator(const SimpleParseNode& node);
	static char opLevel(char c);
	static bool opStringIsHigherPrecedence(
				const OpOrExpression& l,
				const OpOrExpression& r
				);
	static bool opStringIsHigherPrecedence(
				const Symbol& l, const Symbol& r
				);
	static char opStringTextOpLevel(const Symbol& l);

private:
	Expression collapseOpExpressionSeqInner(
		const ImmutableTreeVector<OpOrExpression>& exprs,
		uint32_t depth
		);

	static const uint32_t maxDepth = 800;
};

}
}
}

using namespace Ufora::FORA::Language;

