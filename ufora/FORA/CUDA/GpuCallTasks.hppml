/***************************************************************************
    Copyright 2016 Ufora Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
****************************************************************************/

#pragma once

#include "../../core/PolymorphicSharedPtr.hpp"
#include "../../core/containers/ImmutableTreeSet.hppml"
#include "../../core/containers/ImmutableTreeMap.hppml"
#include "../VectorDataManager/PageId.hppml"
#include "../Core/ImplValContainer.hppml"

#include <boost/thread.hpp>
#include "../../core/threading/Trigger.hppml"

class VectorDataManager;

namespace Fora {
namespace Interpreter {

class ExecutionContext;

}
}

@type GpuCallTaskResult = 
    -| ValidResult of ()
    -| Failed of std::string reason
    -| Blocked of ImmutableTreeSet<Fora::PageId> pages
    ;

class GpuCallTasks : 
            public PolymorphicSharedPtrBase<GpuCallTasks> {
public:
    GpuCallTasks()
        {
        }

    GpuCallTaskResult execute(
                    const ImplValContainer& toCall, 
                    const ImplValContainer& vectorArgument, 
                    PolymorphicSharedPtr<Fora::Interpreter::ExecutionContext> containingContext,
                    Ufora::threading::Trigger& earlyTerminationTrigger
                    );

private:
};
