/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include <string>
#include "../../core/Common.hppml"
#include "../Judgment/JudgmentOnValue.hppml"

namespace TypedFora {

class Callable;

}

class ExternalFunctionDescriptor;

template<class T>
class ImmutableTreeVector;

@type FortranReturnType =
	//indicates that the FORTRAN function returns a regular value
	//and doesn't modify any of its Vector arguments
	Normal of Type returnType
	//indicates that the FORTRAN function modifies some of its arguments.
	//the arguments in argumentIndices will be duplicated, passed to the
	//function, and then returned in a tuple
-|	ModifiesArgumentsInPlace of ImmutableTreeVector<uint64_t> argumentIndices
	;

ExternalFunctionDescriptor	getFORTRANFunctionWrapper(
								const std::string& visibleName,
								const std::string& libcallName,
								const ImmutableTreeVector<JOV>& argJovs,
								const FortranReturnType& returnType
								);

TypedFora::Callable getFORTRANCallTarget(
			const std::string& visibleName,
			const std::string& libcallName,
			const ImmutableTreeVector<JOV>& jovs,
			const FortranReturnType& returnType
			);


