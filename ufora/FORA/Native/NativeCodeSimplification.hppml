/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#ifndef NativeCodeSimplification_hppml_
#define NativeCodeSimplification_hppml_

#include "NativeCodeFlattened.hppml"
#include "../../core/containers/TwoWaySetMap.hpp"

class RuntimeConfig;

//TODO cleanup tom: put these functions in their own namespace

void	variableMerge(map<NativeBlockID, NativeCodeFlattened::Block>& outBlocks);

void	removeEmptyVariables(map<NativeBlockID, NativeCodeFlattened::Block>& outBlocks);

void 	duplicateEntrypoints(map<NativeBlockID, NativeCodeFlattened::Block>& outBlocks);
void 	dropExtraInterrupts(map<NativeBlockID, NativeCodeFlattened::Block>& outBlocks);
void 	removeUnusedBlocks(map<NativeBlockID, NativeCodeFlattened::Block>& outBlocks);
void	collapseLinearBlocks(map<NativeBlockID, NativeCodeFlattened::Block>& outBlocks);
void 	promoteInBlockUseVariables(map<NativeBlockID, NativeCodeFlattened::Block>& outBlocks);
void	removeVariableRewrites(map<NativeBlockID, NativeCodeFlattened::Block>& outBlocks);

void	simplifyFlattenedCode(	map<NativeBlockID, NativeCodeFlattened::Block>& outBlocks,
								const RuntimeConfig& inConfig,
								std::string funcName
								);


void	getBlockFlow(
		const map<NativeBlockID, NativeCodeFlattened::Block>& inBlocks,
		TwoWaySetMap<NativeBlockID, NativeBlockID>& outFlow
		);


#endif

