/***************************************************************************
    Copyright 2016 Ufora Inc.
 
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
 
        http://www.apache.org/licenses/LICENSE-2.0
 
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
****************************************************************************/

#pragma once

#include "PausedComputation.hppml"
#include "PausedComputationTreeStats.hppml"
#include "../VectorDataManager/PageId.hppml"
#include "../VectorDataManager/BigVectorId.hppml"
#include "TimeElapsed.hppml"
#include "../ControlFlowGraph/CFGWithFutures.hppml"
#include <sstream>

namespace Fora {
namespace Interpreter {

@type
	PausedComputationTreeThreadChildren = 
			NoChildren of ()
		-|	SingleChildPassedBackToParent of PausedComputationTree child
		-| 	MultipleChildrenAsTuple of ImmutableTreeVector<pair<PausedComputationTree, Nullable<Symbol> > > children
		-| 	MultipleChildrenAsApply of ImmutableTreeVector<pair<PausedComputationTree, Nullable<Symbol> > > children
and
	PausedComputationTree = 
			Thread of 
				PausedComputationTreeThreadChildren children, 
				PausedComputation computation,
				TimeElapsed timeElapsed,
				PausedComputationTreeStats treeStats
		-|	Simulation of 
				ImmutableTreeMap<int64_t, PausedComputationTree> children, 
				PolymorphicSharedPtr<CFGWithFutures> simulation,
				TimeElapsed timeElapsed,
				PausedComputationTreeStats treeStats
		-|	Hole of 
				hash_type computationGuid
	with
		hash_type hash = (this->hashSelf())
	{
	public:
		hash_type hashSelf() const;

		void treeStateToString(std::ostringstream& stream, long depth) const;

		static PausedComputationTree Value(const ImplValContainer& value);

		ImmutableTreeSet<Fora::BigVectorId> bigvecsReferenced() const;
	}
and
	PausedComputationTreeSplit = 
		hash_type computationHash,
		PausedComputationTree childComputation
	;

macro_defineCppmlComparisonOperators(PausedComputationTree);

}
}


macro_defineMemberHashFunction(Fora::Interpreter::PausedComputationTree);

template<>
class CPPMLPrettyPrint<Fora::Interpreter::PausedComputationTree> {
public:
		static void prettyPrint(CPPMLPrettyPrintStream& s, const Fora::Interpreter::PausedComputationTree& t);
};

