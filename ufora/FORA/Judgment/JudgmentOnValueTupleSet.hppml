/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include "JudgmentOnValue.hppml"

/*************

JudgmentOnValueTupleSet

Holds a set of JOVs and provides functions for querying them based on coverage

**************/

class ImplValContainer;

namespace Fora {
namespace Interpreter {

class EvalFrameArgList;

}
}

namespace Fora {

class JudgmentOnValueTupleSetImpl;

class JudgmentOnValueTupleSet {
public:
	JudgmentOnValueTupleSet();

	void insert(const JOVT& inJOV);

	bool contains(const JOVT& inJOV) const;

	void erase(const JOVT& inJOV);

	size_t size() const;

	void judgmentsCovering(
		const ImplValContainer& implVal,
		std::vector<JOVT>& outJudgments
		) const;

	void judgmentsCovering(
		const JOVT& inJOVT,
		std::vector<JOVT>& outJudgments
		) const;

	void judgmentsCoveredBy(
		const JOVT& inJOVT,
		std::vector<JOVT>& outJudgments
		) const;

	Nullable<JOVT> smallestJovtCovering(const JOVT& in);

private:
	boost::shared_ptr<JudgmentOnValueTupleSetImpl> mImpl;
};


}
