/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/

#pragma once

#include "../../core/containers/TwoWaySetMap.hpp"
#include "ReasonerFrameId.hppml"

namespace Fora {

class ReasonerEntrypointGraph {
public:
	void addRoot(ReasonerFrameId root);

	void removeRoot(ReasonerFrameId root);

	bool isRoot(ReasonerFrameId root) const;

	void markDirty(ReasonerFrameId entrypoint);

	Nullable<ReasonerFrameId> popDirtyReachableFrame();

	//returns true if the set of edges has changed
	bool setEdges(ReasonerFrameId frame, const std::set<ReasonerFrameId>& called);

	const std::set<ReasonerFrameId>& getCalledFrames(ReasonerFrameId frame) const;

	const std::set<ReasonerFrameId>& getCallers(ReasonerFrameId frame) const;

	bool isDirty(ReasonerFrameId frame) const;

	bool isReachable(ReasonerFrameId frame) const;

	bool computeIsReachable(ReasonerFrameId frame) const;

private:
	void ensure(ReasonerFrameId entrypoint);

	void markReachable(ReasonerFrameId entrypoint);

	void verifyIsReachable(ReasonerFrameId entrypoint);

	std::set<ReasonerFrameId> mFrames;

	TwoWaySetMap<ReasonerFrameId, ReasonerFrameId> mFrameGraph;

	std::set<ReasonerFrameId> mRootFrames;

	//all reachable frames are in here, but some unreachable frames could
	//also be represented here.
	std::set<ReasonerFrameId> mReachableFrames;

	std::set<ReasonerFrameId> mDirtyFrames;

	std::set<ReasonerFrameId> mDirtyReachableFrames;
};

}
