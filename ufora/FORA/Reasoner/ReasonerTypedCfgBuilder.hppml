/***************************************************************************
    Copyright 2015 Ufora Inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
****************************************************************************/
#pragma once

#include "../../core/PolymorphicSharedPtr.hpp"
#include "../TypedCfg/TypedCfg.hppml"
#include "ReasonerFrame.hppml"
#include "SimpleForwardReasoner.hppml"
#include "ReasonerFrameId.hppml"

class Axioms;
namespace TypedFora {
class Compiler;
};

namespace Fora {

class ReasonerTypedCfgBuilderForContinuation;

@type ReasonerTypedCfgBuilderForFrame =
	PolymorphicSharedPtr<Axioms> axioms,
	PolymorphicSharedPtr<TypedFora::Compiler> typedForaCompiler,
	PolymorphicSharedPtr<ReasonerFrame> reasonerFrame,
	PolymorphicSharedPtr<SimpleForwardReasoner> reasoner
{
public:
	TypedCfgGraph getGraph();

	static TypedCfgGraphIdentity entrypointNameFor(ReasonerFrameId frameId);

	static hash_type nodeIdFor(ReasonerFrame::Node node);
};

@type ReasonerTypedCfgBuilderForNode =
		ReasonerTypedCfgBuilderForFrame forFrame,
		ReasonerFrame::Node node
{
public:
	TypedCfgNodeBody getBody();

	TypedCfgContinuation getContinuation(ControlFlowContinuation cont);

	TypedCfgContinuation getContinuation(ControlFlowContinuation cont, JOV resultJOV);

	TypedCfgContinuation getContinuation(ControlFlowContinuation cont, Nullable<JOV> resultJOV);
};

}

