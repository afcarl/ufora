/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include "../ControlFlowGraph/ControlFlowGraph.hppml"
#include "../Judgment/JudgmentOnValue.hppml"
#include "../TypedFora/TypedFora.hppml"

namespace Fora {

/********************
InterpreterTrace

Holds a sequence of FORA instructions and Judgments that allow us to reconstruct the exact
sequence of instructions that a given invocation of the FORA interpreter passed through.

*********************/


@type InterpreterTraceTerm =
	Initialize of
		ControlFlowGraphJumpPoint location,
		ImmutableTreeVector<JOV> jovs,
		Nullable<pair<bool, JOV> > incomingResult,
		uint64_t frameUniqueID,
		Nullable<pair<TypedFora::MetadataInstruction, long> > wasEverMachineCodeFrame
-|	Branch of
		int32_t whichBranch,
		Nullable<string> label
-|	AxiomResult of
		JOV resultJOV,
		bool isException,
		Nullable<string> label
-|	NewStackFrame of
		ControlFlowGraphJumpPoint location,
		uint64_t frameUniqueID
-|	ReturnToStackFrame of
		ControlFlowGraphJumpPoint location,
		bool isException,
		Nullable<ImmutableTreeVector<JOV> > jovsInTargetFrame,
		Nullable<JOV> resultJOV,
		uint64_t frameUniqueID,
		Nullable<pair<TypedFora::MetadataInstruction, long> > wasEverMachineCodeFrame
-|	ContinuationAdapterFollowed of
		bool isException,
		TypedFora::Type inputType,
		bool isTargetNative
-|	TransferToInterpreterFromMachineCode of
		ControlFlowGraphJumpPoint location,
		ImmutableTreeVector<JOV> targetInstructionJovs,
		ImmutableTreeVector<JOV> dataJovs,
		Nullable<pair<bool, JOV> > incomingResult
-|	TransferToMachineCode of
		ControlFlowGraphJumpPoint location,
		ImmutableTreeVector<JOV> targetFunJovs
-|	ReturnToMachineCode of
		ControlFlowGraphJumpPoint location,
		ImmutableTreeVector<JOV> targetInstructionJovs,
		ImmutableTreeVector<JOV> dataJovs,
		bool isException,
		JOV inResultJOV
-|	ArbitraryInterpreterLogging of std::string message
		;

@type InterpreterTrace = ImmutableTreeVector<InterpreterTraceTerm> terms;

}

template<>
class CPPMLPrettyPrint<Fora::InterpreterTraceTerm> {
public:
		static void prettyPrint(CPPMLPrettyPrintStream& s, const Fora::InterpreterTraceTerm& t);
};





