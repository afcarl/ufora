/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include "../../core/PolymorphicSharedPtr.hpp"
#include <boost/shared_ptr.hpp>
#include "../Interpreter/InstructionGraph.hppml"

class Axioms;

namespace Fora {

class InterpreterTrace;
class InterpreterTraceTerm;

}

namespace Fora {
namespace Compiler {

class TracingInterpreterObserver;

class InterpreterTraceVisitorImpl;

class InstructionGraph;

class InterpreterTraceVisitor {
public:
	InterpreterTraceVisitor(TracingInterpreterObserver* inHandler);

	~InterpreterTraceVisitor();

	//indicate that we will temporarily not be handing in traces
	void pauseTracing();

	//indicate that we are going to resume adding trace terms
	void resumeTracing();

	void addTraceTerm(const Fora::InterpreterTraceTerm& inTerm);

	//attempt to send traces to the handler. returns true if we sent anything.
	bool sendTraces(bool blockUntilTraceIsCompiled);

	double timeOfLastTraceTerm();

private:
	boost::shared_ptr<InterpreterTraceVisitorImpl> mImpl;
};

}
}

