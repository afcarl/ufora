/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include "../../core/cppml/CPPMLEquality.hppml"
#include "../../core/math/Hash.hpp"
#include "../Judgment/JudgmentOnValue.hppml"

namespace Fora {

@type BigVectorId =
			hash_type guid,
			uint64_t size,
			JudgmentOnResult jor
{
public:
};

macro_defineCppmlComparisonOperators(BigVectorId);

}

template<>
class CPPMLEquality<Fora::BigVectorId, void> {
public:
		static char cmp(const Fora::BigVectorId& lhs, const Fora::BigVectorId& rhs)
			{
			return lhs.guid().cmp(rhs.guid());
			}
};


namespace boost {

template<>
class hash<Fora::BigVectorId> : public std::unary_function<Fora::BigVectorId, std::size_t> {
public:
		std::size_t operator()(Fora::BigVectorId const& in) const
			{
			return boost::hash<hash_type>()(in.guid());
			}
};

};



