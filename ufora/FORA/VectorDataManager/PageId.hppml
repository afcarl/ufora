/***************************************************************************
   Copyright 2015 Ufora Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
****************************************************************************/
#pragma once

#include "../../core/cppml/CPPMLEquality.hppml"
#include "../../core/math/Hash.hpp"

namespace Fora {

@type PageId = hash_type guid, uint32_t bytecount, uint32_t actualBytecount {
public:
	static PageId External(hash_type guid, uint32_t bytecount)
		{
		((uint8_t*)&guid)[0] = 0;

		return PageId(guid, bytecount, bytecount);
		}

	static PageId Internal(hash_type guid, uint32_t bytecount, uint32_t actualBytecount)
		{
		((uint8_t*)&guid)[0] = 1;

		return PageId(guid, bytecount, actualBytecount);
		}

	bool isInternal() const
		{
		return ((char*)&guid())[0] == 1;
		}
};

macro_defineCppmlComparisonOperators(PageId);

}

namespace boost {

template<>
class hash<Fora::PageId> : public std::unary_function<Fora::PageId, std::size_t> {
public:
		std::size_t operator()(Fora::PageId const& in) const
			{
			return boost::hash<hash_type>()(in.guid());
			}
};

};



